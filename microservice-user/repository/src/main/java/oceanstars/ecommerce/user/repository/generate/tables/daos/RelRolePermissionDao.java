/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import oceanstars.ecommerce.user.repository.generate.tables.RelRolePermission;
import oceanstars.ecommerce.user.repository.generate.tables.pojos.RelRolePermissionPojo;
import oceanstars.ecommerce.user.repository.generate.tables.records.RelRolePermissionRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RelRolePermissionDao extends DAOImpl<RelRolePermissionRecord, RelRolePermissionPojo, Long> {

    /**
     * Create a new RelRolePermissionDao without any configuration
     */
    public RelRolePermissionDao() {
        super(RelRolePermission.REL_ROLE_PERMISSION, RelRolePermissionPojo.class);
    }

    /**
     * Create a new RelRolePermissionDao with an attached configuration
     */
    @Autowired
    public RelRolePermissionDao(Configuration configuration) {
        super(RelRolePermission.REL_ROLE_PERMISSION, RelRolePermissionPojo.class, configuration);
    }

    @Override
    public Long getId(RelRolePermissionPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelRolePermissionPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelRolePermission.REL_ROLE_PERMISSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<RelRolePermissionPojo> fetchById(Long... values) {
        return fetch(RelRolePermission.REL_ROLE_PERMISSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public RelRolePermissionPojo fetchOneById(Long value) {
        return fetchOne(RelRolePermission.REL_ROLE_PERMISSION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<RelRolePermissionPojo> fetchOptionalById(Long value) {
        return fetchOptional(RelRolePermission.REL_ROLE_PERMISSION.ID, value);
    }

    /**
     * Fetch records that have <code>rid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelRolePermissionPojo> fetchRangeOfRid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelRolePermission.REL_ROLE_PERMISSION.RID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rid IN (values)</code>
     */
    public List<RelRolePermissionPojo> fetchByRid(Long... values) {
        return fetch(RelRolePermission.REL_ROLE_PERMISSION.RID, values);
    }

    /**
     * Fetch records that have <code>pid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelRolePermissionPojo> fetchRangeOfPid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelRolePermission.REL_ROLE_PERMISSION.PID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pid IN (values)</code>
     */
    public List<RelRolePermissionPojo> fetchByPid(Long... values) {
        return fetch(RelRolePermission.REL_ROLE_PERMISSION.PID, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelRolePermissionPojo> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(RelRolePermission.REL_ROLE_PERMISSION.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<RelRolePermissionPojo> fetchByCreateBy(String... values) {
        return fetch(RelRolePermission.REL_ROLE_PERMISSION.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelRolePermissionPojo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RelRolePermission.REL_ROLE_PERMISSION.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<RelRolePermissionPojo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(RelRolePermission.REL_ROLE_PERMISSION.CREATE_AT, values);
    }
}
