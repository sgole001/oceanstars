/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.pojos;


import java.time.LocalDateTime;

import oceanstars.ecommerce.user.repository.generate.tables.interfaces.IUserProfile;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProfilePojo implements IUserProfile {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String code;
    private String firstName;
    private String lastName;
    private String nickName;
    private String avatar;
    private Short gender;
    private String createBy;
    private LocalDateTime createAt;
    private String updateBy;
    private LocalDateTime updateAt;
    private Integer version;

    public UserProfilePojo() {}

    public UserProfilePojo(IUserProfile value) {
        this.id = value.getId();
        this.code = value.getCode();
        this.firstName = value.getFirstName();
        this.lastName = value.getLastName();
        this.nickName = value.getNickName();
        this.avatar = value.getAvatar();
        this.gender = value.getGender();
        this.createBy = value.getCreateBy();
        this.createAt = value.getCreateAt();
        this.updateBy = value.getUpdateBy();
        this.updateAt = value.getUpdateAt();
        this.version = value.getVersion();
    }

    public UserProfilePojo(
        Long id,
        String code,
        String firstName,
        String lastName,
        String nickName,
        String avatar,
        Short gender,
        String createBy,
        LocalDateTime createAt,
        String updateBy,
        LocalDateTime updateAt,
        Integer version
    ) {
        this.id = id;
        this.code = code;
        this.firstName = firstName;
        this.lastName = lastName;
        this.nickName = nickName;
        this.avatar = avatar;
        this.gender = gender;
        this.createBy = createBy;
        this.createAt = createAt;
        this.updateBy = updateBy;
        this.updateAt = updateAt;
        this.version = version;
    }

    /**
     * Getter for <code>user_profile.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>user_profile.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>user_profile.code</code>.
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>user_profile.code</code>.
     */
    @Override
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for <code>user_profile.first_name</code>.
     */
    @Override
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>user_profile.first_name</code>.
     */
    @Override
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for <code>user_profile.last_name</code>.
     */
    @Override
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>user_profile.last_name</code>.
     */
    @Override
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for <code>user_profile.nick_name</code>.
     */
    @Override
    public String getNickName() {
        return this.nickName;
    }

    /**
     * Setter for <code>user_profile.nick_name</code>.
     */
    @Override
    public void setNickName(String nickName) {
        this.nickName = nickName;
    }

    /**
     * Getter for <code>user_profile.avatar</code>.
     */
    @Override
    public String getAvatar() {
        return this.avatar;
    }

    /**
     * Setter for <code>user_profile.avatar</code>.
     */
    @Override
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    /**
     * Getter for <code>user_profile.gender</code>.
     */
    @Override
    public Short getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>user_profile.gender</code>.
     */
    @Override
    public void setGender(Short gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>user_profile.create_by</code>.
     */
    @Override
    public String getCreateBy() {
        return this.createBy;
    }

    /**
     * Setter for <code>user_profile.create_by</code>.
     */
    @Override
    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    /**
     * Getter for <code>user_profile.create_at</code>.
     */
    @Override
    public LocalDateTime getCreateAt() {
        return this.createAt;
    }

    /**
     * Setter for <code>user_profile.create_at</code>.
     */
    @Override
    public void setCreateAt(LocalDateTime createAt) {
        this.createAt = createAt;
    }

    /**
     * Getter for <code>user_profile.update_by</code>.
     */
    @Override
    public String getUpdateBy() {
        return this.updateBy;
    }

    /**
     * Setter for <code>user_profile.update_by</code>.
     */
    @Override
    public void setUpdateBy(String updateBy) {
        this.updateBy = updateBy;
    }

    /**
     * Getter for <code>user_profile.update_at</code>.
     */
    @Override
    public LocalDateTime getUpdateAt() {
        return this.updateAt;
    }

    /**
     * Setter for <code>user_profile.update_at</code>.
     */
    @Override
    public void setUpdateAt(LocalDateTime updateAt) {
        this.updateAt = updateAt;
    }

    /**
     * Getter for <code>user_profile.version</code>.
     */
    @Override
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>user_profile.version</code>.
     */
    @Override
    public void setVersion(Integer version) {
        this.version = version;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserProfilePojo other = (UserProfilePojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.nickName == null) {
            if (other.nickName != null)
                return false;
        }
        else if (!this.nickName.equals(other.nickName))
            return false;
        if (this.avatar == null) {
            if (other.avatar != null)
                return false;
        }
        else if (!this.avatar.equals(other.avatar))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.createBy == null) {
            if (other.createBy != null)
                return false;
        }
        else if (!this.createBy.equals(other.createBy))
            return false;
        if (this.createAt == null) {
            if (other.createAt != null)
                return false;
        }
        else if (!this.createAt.equals(other.createAt))
            return false;
        if (this.updateBy == null) {
            if (other.updateBy != null)
                return false;
        }
        else if (!this.updateBy.equals(other.updateBy))
            return false;
        if (this.updateAt == null) {
            if (other.updateAt != null)
                return false;
        }
        else if (!this.updateAt.equals(other.updateAt))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.nickName == null) ? 0 : this.nickName.hashCode());
        result = prime * result + ((this.avatar == null) ? 0 : this.avatar.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.createBy == null) ? 0 : this.createBy.hashCode());
        result = prime * result + ((this.createAt == null) ? 0 : this.createAt.hashCode());
        result = prime * result + ((this.updateBy == null) ? 0 : this.updateBy.hashCode());
        result = prime * result + ((this.updateAt == null) ? 0 : this.updateAt.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserProfilePojo (");

        sb.append(id);
        sb.append(", ").append(code);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(nickName);
        sb.append(", ").append(avatar);
        sb.append(", ").append(gender);
        sb.append(", ").append(createBy);
        sb.append(", ").append(createAt);
        sb.append(", ").append(updateBy);
        sb.append(", ").append(updateAt);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserProfile from) {
        setId(from.getId());
        setCode(from.getCode());
        setFirstName(from.getFirstName());
        setLastName(from.getLastName());
        setNickName(from.getNickName());
        setAvatar(from.getAvatar());
        setGender(from.getGender());
        setCreateBy(from.getCreateBy());
        setCreateAt(from.getCreateAt());
        setUpdateBy(from.getUpdateBy());
        setUpdateAt(from.getUpdateAt());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IUserProfile> E into(E into) {
        into.from(this);
        return into;
    }
}
