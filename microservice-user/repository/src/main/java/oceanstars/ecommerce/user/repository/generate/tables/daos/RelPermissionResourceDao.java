/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import oceanstars.ecommerce.user.repository.generate.tables.RelPermissionResource;
import oceanstars.ecommerce.user.repository.generate.tables.pojos.RelPermissionResourcePojo;
import oceanstars.ecommerce.user.repository.generate.tables.records.RelPermissionResourceRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RelPermissionResourceDao extends DAOImpl<RelPermissionResourceRecord, RelPermissionResourcePojo, Long> {

    /**
     * Create a new RelPermissionResourceDao without any configuration
     */
    public RelPermissionResourceDao() {
        super(RelPermissionResource.REL_PERMISSION_RESOURCE, RelPermissionResourcePojo.class);
    }

    /**
     * Create a new RelPermissionResourceDao with an attached configuration
     */
    @Autowired
    public RelPermissionResourceDao(Configuration configuration) {
        super(RelPermissionResource.REL_PERMISSION_RESOURCE, RelPermissionResourcePojo.class, configuration);
    }

    @Override
    public Long getId(RelPermissionResourcePojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchById(Long... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public RelPermissionResourcePojo fetchOneById(Long value) {
        return fetchOne(RelPermissionResource.REL_PERMISSION_RESOURCE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<RelPermissionResourcePojo> fetchOptionalById(Long value) {
        return fetchOptional(RelPermissionResource.REL_PERMISSION_RESOURCE.ID, value);
    }

    /**
     * Fetch records that have <code>pid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfPid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.PID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pid IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByPid(Long... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.PID, values);
    }

    /**
     * Fetch records that have <code>rid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfRid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.RID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rid IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByRid(Long... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.RID, values);
    }

    /**
     * Fetch records that have <code>tid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfTid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.TID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tid IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByTid(Long... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.TID, values);
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByOid(Long... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.OID, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByCreateBy(String... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelPermissionResourcePojo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RelPermissionResource.REL_PERMISSION_RESOURCE.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<RelPermissionResourcePojo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(RelPermissionResource.REL_PERMISSION_RESOURCE.CREATE_AT, values);
    }
}
