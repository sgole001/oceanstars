/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import oceanstars.ecommerce.user.repository.generate.tables.RelAccountRole;
import oceanstars.ecommerce.user.repository.generate.tables.pojos.RelAccountRolePojo;
import oceanstars.ecommerce.user.repository.generate.tables.records.RelAccountRoleRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RelAccountRoleDao extends DAOImpl<RelAccountRoleRecord, RelAccountRolePojo, Long> {

    /**
     * Create a new RelAccountRoleDao without any configuration
     */
    public RelAccountRoleDao() {
        super(RelAccountRole.REL_ACCOUNT_ROLE, RelAccountRolePojo.class);
    }

    /**
     * Create a new RelAccountRoleDao with an attached configuration
     */
    @Autowired
    public RelAccountRoleDao(Configuration configuration) {
        super(RelAccountRole.REL_ACCOUNT_ROLE, RelAccountRolePojo.class, configuration);
    }

    @Override
    public Long getId(RelAccountRolePojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelAccountRolePojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelAccountRole.REL_ACCOUNT_ROLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<RelAccountRolePojo> fetchById(Long... values) {
        return fetch(RelAccountRole.REL_ACCOUNT_ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public RelAccountRolePojo fetchOneById(Long value) {
        return fetchOne(RelAccountRole.REL_ACCOUNT_ROLE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<RelAccountRolePojo> fetchOptionalById(Long value) {
        return fetchOptional(RelAccountRole.REL_ACCOUNT_ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>aid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelAccountRolePojo> fetchRangeOfAid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelAccountRole.REL_ACCOUNT_ROLE.AID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>aid IN (values)</code>
     */
    public List<RelAccountRolePojo> fetchByAid(Long... values) {
        return fetch(RelAccountRole.REL_ACCOUNT_ROLE.AID, values);
    }

    /**
     * Fetch records that have <code>rid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelAccountRolePojo> fetchRangeOfRid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(RelAccountRole.REL_ACCOUNT_ROLE.RID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rid IN (values)</code>
     */
    public List<RelAccountRolePojo> fetchByRid(Long... values) {
        return fetch(RelAccountRole.REL_ACCOUNT_ROLE.RID, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelAccountRolePojo> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(RelAccountRole.REL_ACCOUNT_ROLE.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<RelAccountRolePojo> fetchByCreateBy(String... values) {
        return fetch(RelAccountRole.REL_ACCOUNT_ROLE.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<RelAccountRolePojo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RelAccountRole.REL_ACCOUNT_ROLE.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<RelAccountRolePojo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(RelAccountRole.REL_ACCOUNT_ROLE.CREATE_AT, values);
    }
}
