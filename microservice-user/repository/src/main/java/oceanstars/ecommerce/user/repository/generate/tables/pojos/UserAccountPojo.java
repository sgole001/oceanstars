/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.pojos;


import java.time.LocalDateTime;

import oceanstars.ecommerce.user.repository.generate.tables.interfaces.IUserAccount;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountPojo implements IUserAccount {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String code;
    private Short source;
    private Short means;
    private String email;
    private String mobile;
    private String password;
    private String externalId;
    private String creatIp;
    private String lastLoginIp;
    private Integer loginTimes;
    private Short status;
    private String createBy;
    private LocalDateTime createAt;
    private String updateBy;
    private LocalDateTime updateAt;
    private Integer version;

    public UserAccountPojo() {}

    public UserAccountPojo(IUserAccount value) {
        this.id = value.getId();
        this.code = value.getCode();
        this.source = value.getSource();
        this.means = value.getMeans();
        this.email = value.getEmail();
        this.mobile = value.getMobile();
        this.password = value.getPassword();
        this.externalId = value.getExternalId();
        this.creatIp = value.getCreatIp();
        this.lastLoginIp = value.getLastLoginIp();
        this.loginTimes = value.getLoginTimes();
        this.status = value.getStatus();
        this.createBy = value.getCreateBy();
        this.createAt = value.getCreateAt();
        this.updateBy = value.getUpdateBy();
        this.updateAt = value.getUpdateAt();
        this.version = value.getVersion();
    }

    public UserAccountPojo(
        Long id,
        String code,
        Short source,
        Short means,
        String email,
        String mobile,
        String password,
        String externalId,
        String creatIp,
        String lastLoginIp,
        Integer loginTimes,
        Short status,
        String createBy,
        LocalDateTime createAt,
        String updateBy,
        LocalDateTime updateAt,
        Integer version
    ) {
        this.id = id;
        this.code = code;
        this.source = source;
        this.means = means;
        this.email = email;
        this.mobile = mobile;
        this.password = password;
        this.externalId = externalId;
        this.creatIp = creatIp;
        this.lastLoginIp = lastLoginIp;
        this.loginTimes = loginTimes;
        this.status = status;
        this.createBy = createBy;
        this.createAt = createAt;
        this.updateBy = updateBy;
        this.updateAt = updateAt;
        this.version = version;
    }

    /**
     * Getter for <code>user_account.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>user_account.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>user_account.code</code>.
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>user_account.code</code>.
     */
    @Override
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for <code>user_account.source</code>.
     */
    @Override
    public Short getSource() {
        return this.source;
    }

    /**
     * Setter for <code>user_account.source</code>.
     */
    @Override
    public void setSource(Short source) {
        this.source = source;
    }

    /**
     * Getter for <code>user_account.means</code>.
     */
    @Override
    public Short getMeans() {
        return this.means;
    }

    /**
     * Setter for <code>user_account.means</code>.
     */
    @Override
    public void setMeans(Short means) {
        this.means = means;
    }

    /**
     * Getter for <code>user_account.email</code>.
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>user_account.email</code>.
     */
    @Override
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>user_account.mobile</code>.
     */
    @Override
    public String getMobile() {
        return this.mobile;
    }

    /**
     * Setter for <code>user_account.mobile</code>.
     */
    @Override
    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    /**
     * Getter for <code>user_account.password</code>.
     */
    @Override
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>user_account.password</code>.
     */
    @Override
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>user_account.external_id</code>.
     */
    @Override
    public String getExternalId() {
        return this.externalId;
    }

    /**
     * Setter for <code>user_account.external_id</code>.
     */
    @Override
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /**
     * Getter for <code>user_account.creat_ip</code>.
     */
    @Override
    public String getCreatIp() {
        return this.creatIp;
    }

    /**
     * Setter for <code>user_account.creat_ip</code>.
     */
    @Override
    public void setCreatIp(String creatIp) {
        this.creatIp = creatIp;
    }

    /**
     * Getter for <code>user_account.last_login_ip</code>.
     */
    @Override
    public String getLastLoginIp() {
        return this.lastLoginIp;
    }

    /**
     * Setter for <code>user_account.last_login_ip</code>.
     */
    @Override
    public void setLastLoginIp(String lastLoginIp) {
        this.lastLoginIp = lastLoginIp;
    }

    /**
     * Getter for <code>user_account.login_times</code>.
     */
    @Override
    public Integer getLoginTimes() {
        return this.loginTimes;
    }

    /**
     * Setter for <code>user_account.login_times</code>.
     */
    @Override
    public void setLoginTimes(Integer loginTimes) {
        this.loginTimes = loginTimes;
    }

    /**
     * Getter for <code>user_account.status</code>.
     */
    @Override
    public Short getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>user_account.status</code>.
     */
    @Override
    public void setStatus(Short status) {
        this.status = status;
    }

    /**
     * Getter for <code>user_account.create_by</code>.
     */
    @Override
    public String getCreateBy() {
        return this.createBy;
    }

    /**
     * Setter for <code>user_account.create_by</code>.
     */
    @Override
    public void setCreateBy(String createBy) {
        this.createBy = createBy;
    }

    /**
     * Getter for <code>user_account.create_at</code>.
     */
    @Override
    public LocalDateTime getCreateAt() {
        return this.createAt;
    }

    /**
     * Setter for <code>user_account.create_at</code>.
     */
    @Override
    public void setCreateAt(LocalDateTime createAt) {
        this.createAt = createAt;
    }

    /**
     * Getter for <code>user_account.update_by</code>.
     */
    @Override
    public String getUpdateBy() {
        return this.updateBy;
    }

    /**
     * Setter for <code>user_account.update_by</code>.
     */
    @Override
    public void setUpdateBy(String updateBy) {
        this.updateBy = updateBy;
    }

    /**
     * Getter for <code>user_account.update_at</code>.
     */
    @Override
    public LocalDateTime getUpdateAt() {
        return this.updateAt;
    }

    /**
     * Setter for <code>user_account.update_at</code>.
     */
    @Override
    public void setUpdateAt(LocalDateTime updateAt) {
        this.updateAt = updateAt;
    }

    /**
     * Getter for <code>user_account.version</code>.
     */
    @Override
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>user_account.version</code>.
     */
    @Override
    public void setVersion(Integer version) {
        this.version = version;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserAccountPojo other = (UserAccountPojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.source == null) {
            if (other.source != null)
                return false;
        }
        else if (!this.source.equals(other.source))
            return false;
        if (this.means == null) {
            if (other.means != null)
                return false;
        }
        else if (!this.means.equals(other.means))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.mobile == null) {
            if (other.mobile != null)
                return false;
        }
        else if (!this.mobile.equals(other.mobile))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.externalId == null) {
            if (other.externalId != null)
                return false;
        }
        else if (!this.externalId.equals(other.externalId))
            return false;
        if (this.creatIp == null) {
            if (other.creatIp != null)
                return false;
        }
        else if (!this.creatIp.equals(other.creatIp))
            return false;
        if (this.lastLoginIp == null) {
            if (other.lastLoginIp != null)
                return false;
        }
        else if (!this.lastLoginIp.equals(other.lastLoginIp))
            return false;
        if (this.loginTimes == null) {
            if (other.loginTimes != null)
                return false;
        }
        else if (!this.loginTimes.equals(other.loginTimes))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.createBy == null) {
            if (other.createBy != null)
                return false;
        }
        else if (!this.createBy.equals(other.createBy))
            return false;
        if (this.createAt == null) {
            if (other.createAt != null)
                return false;
        }
        else if (!this.createAt.equals(other.createAt))
            return false;
        if (this.updateBy == null) {
            if (other.updateBy != null)
                return false;
        }
        else if (!this.updateBy.equals(other.updateBy))
            return false;
        if (this.updateAt == null) {
            if (other.updateAt != null)
                return false;
        }
        else if (!this.updateAt.equals(other.updateAt))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.source == null) ? 0 : this.source.hashCode());
        result = prime * result + ((this.means == null) ? 0 : this.means.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.mobile == null) ? 0 : this.mobile.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.externalId == null) ? 0 : this.externalId.hashCode());
        result = prime * result + ((this.creatIp == null) ? 0 : this.creatIp.hashCode());
        result = prime * result + ((this.lastLoginIp == null) ? 0 : this.lastLoginIp.hashCode());
        result = prime * result + ((this.loginTimes == null) ? 0 : this.loginTimes.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createBy == null) ? 0 : this.createBy.hashCode());
        result = prime * result + ((this.createAt == null) ? 0 : this.createAt.hashCode());
        result = prime * result + ((this.updateBy == null) ? 0 : this.updateBy.hashCode());
        result = prime * result + ((this.updateAt == null) ? 0 : this.updateAt.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserAccountPojo (");

        sb.append(id);
        sb.append(", ").append(code);
        sb.append(", ").append(source);
        sb.append(", ").append(means);
        sb.append(", ").append(email);
        sb.append(", ").append(mobile);
        sb.append(", ").append(password);
        sb.append(", ").append(externalId);
        sb.append(", ").append(creatIp);
        sb.append(", ").append(lastLoginIp);
        sb.append(", ").append(loginTimes);
        sb.append(", ").append(status);
        sb.append(", ").append(createBy);
        sb.append(", ").append(createAt);
        sb.append(", ").append(updateBy);
        sb.append(", ").append(updateAt);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserAccount from) {
        setId(from.getId());
        setCode(from.getCode());
        setSource(from.getSource());
        setMeans(from.getMeans());
        setEmail(from.getEmail());
        setMobile(from.getMobile());
        setPassword(from.getPassword());
        setExternalId(from.getExternalId());
        setCreatIp(from.getCreatIp());
        setLastLoginIp(from.getLastLoginIp());
        setLoginTimes(from.getLoginTimes());
        setStatus(from.getStatus());
        setCreateBy(from.getCreateBy());
        setCreateAt(from.getCreateAt());
        setUpdateBy(from.getUpdateBy());
        setUpdateAt(from.getUpdateAt());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IUserAccount> E into(E into) {
        into.from(this);
        return into;
    }
}
