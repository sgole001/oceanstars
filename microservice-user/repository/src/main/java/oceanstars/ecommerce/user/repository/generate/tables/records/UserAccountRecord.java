/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.records;


import java.time.LocalDateTime;

import oceanstars.ecommerce.user.repository.generate.tables.UserAccount;
import oceanstars.ecommerce.user.repository.generate.tables.interfaces.IUserAccount;
import oceanstars.ecommerce.user.repository.generate.tables.pojos.UserAccountPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record17<Long, String, Short, Short, String, String, String, String, String, String, Integer, Short, String, LocalDateTime, String, LocalDateTime, Integer>, IUserAccount {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_account.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>user_account.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user_account.code</code>.
     */
    @Override
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user_account.code</code>.
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user_account.source</code>.
     */
    @Override
    public void setSource(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>user_account.source</code>.
     */
    @Override
    public Short getSource() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>user_account.means</code>.
     */
    @Override
    public void setMeans(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>user_account.means</code>.
     */
    @Override
    public Short getMeans() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>user_account.email</code>.
     */
    @Override
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>user_account.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user_account.mobile</code>.
     */
    @Override
    public void setMobile(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>user_account.mobile</code>.
     */
    @Override
    public String getMobile() {
        return (String) get(5);
    }

    /**
     * Setter for <code>user_account.password</code>.
     */
    @Override
    public void setPassword(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>user_account.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user_account.external_id</code>.
     */
    @Override
    public void setExternalId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>user_account.external_id</code>.
     */
    @Override
    public String getExternalId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>user_account.creat_ip</code>.
     */
    @Override
    public void setCreatIp(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>user_account.creat_ip</code>.
     */
    @Override
    public String getCreatIp() {
        return (String) get(8);
    }

    /**
     * Setter for <code>user_account.last_login_ip</code>.
     */
    @Override
    public void setLastLoginIp(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>user_account.last_login_ip</code>.
     */
    @Override
    public String getLastLoginIp() {
        return (String) get(9);
    }

    /**
     * Setter for <code>user_account.login_times</code>.
     */
    @Override
    public void setLoginTimes(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>user_account.login_times</code>.
     */
    @Override
    public Integer getLoginTimes() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>user_account.status</code>.
     */
    @Override
    public void setStatus(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>user_account.status</code>.
     */
    @Override
    public Short getStatus() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>user_account.create_by</code>.
     */
    @Override
    public void setCreateBy(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>user_account.create_by</code>.
     */
    @Override
    public String getCreateBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>user_account.create_at</code>.
     */
    @Override
    public void setCreateAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>user_account.create_at</code>.
     */
    @Override
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>user_account.update_by</code>.
     */
    @Override
    public void setUpdateBy(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>user_account.update_by</code>.
     */
    @Override
    public String getUpdateBy() {
        return (String) get(14);
    }

    /**
     * Setter for <code>user_account.update_at</code>.
     */
    @Override
    public void setUpdateAt(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>user_account.update_at</code>.
     */
    @Override
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>user_account.version</code>.
     */
    @Override
    public void setVersion(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>user_account.version</code>.
     */
    @Override
    public Integer getVersion() {
        return (Integer) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, Short, Short, String, String, String, String, String, String, Integer, Short, String, LocalDateTime, String, LocalDateTime, Integer> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, String, Short, Short, String, String, String, String, String, String, Integer, Short, String, LocalDateTime, String, LocalDateTime, Integer> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.CODE;
    }

    @Override
    public Field<Short> field3() {
        return UserAccount.USER_ACCOUNT.SOURCE;
    }

    @Override
    public Field<Short> field4() {
        return UserAccount.USER_ACCOUNT.MEANS;
    }

    @Override
    public Field<String> field5() {
        return UserAccount.USER_ACCOUNT.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return UserAccount.USER_ACCOUNT.MOBILE;
    }

    @Override
    public Field<String> field7() {
        return UserAccount.USER_ACCOUNT.PASSWORD;
    }

    @Override
    public Field<String> field8() {
        return UserAccount.USER_ACCOUNT.EXTERNAL_ID;
    }

    @Override
    public Field<String> field9() {
        return UserAccount.USER_ACCOUNT.CREAT_IP;
    }

    @Override
    public Field<String> field10() {
        return UserAccount.USER_ACCOUNT.LAST_LOGIN_IP;
    }

    @Override
    public Field<Integer> field11() {
        return UserAccount.USER_ACCOUNT.LOGIN_TIMES;
    }

    @Override
    public Field<Short> field12() {
        return UserAccount.USER_ACCOUNT.STATUS;
    }

    @Override
    public Field<String> field13() {
        return UserAccount.USER_ACCOUNT.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return UserAccount.USER_ACCOUNT.CREATE_AT;
    }

    @Override
    public Field<String> field15() {
        return UserAccount.USER_ACCOUNT.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return UserAccount.USER_ACCOUNT.UPDATE_AT;
    }

    @Override
    public Field<Integer> field17() {
        return UserAccount.USER_ACCOUNT.VERSION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public Short component3() {
        return getSource();
    }

    @Override
    public Short component4() {
        return getMeans();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getMobile();
    }

    @Override
    public String component7() {
        return getPassword();
    }

    @Override
    public String component8() {
        return getExternalId();
    }

    @Override
    public String component9() {
        return getCreatIp();
    }

    @Override
    public String component10() {
        return getLastLoginIp();
    }

    @Override
    public Integer component11() {
        return getLoginTimes();
    }

    @Override
    public Short component12() {
        return getStatus();
    }

    @Override
    public String component13() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component14() {
        return getCreateAt();
    }

    @Override
    public String component15() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdateAt();
    }

    @Override
    public Integer component17() {
        return getVersion();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public Short value3() {
        return getSource();
    }

    @Override
    public Short value4() {
        return getMeans();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getMobile();
    }

    @Override
    public String value7() {
        return getPassword();
    }

    @Override
    public String value8() {
        return getExternalId();
    }

    @Override
    public String value9() {
        return getCreatIp();
    }

    @Override
    public String value10() {
        return getLastLoginIp();
    }

    @Override
    public Integer value11() {
        return getLoginTimes();
    }

    @Override
    public Short value12() {
        return getStatus();
    }

    @Override
    public String value13() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value14() {
        return getCreateAt();
    }

    @Override
    public String value15() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdateAt();
    }

    @Override
    public Integer value17() {
        return getVersion();
    }

    @Override
    public UserAccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(Short value) {
        setSource(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(Short value) {
        setMeans(value);
        return this;
    }

    @Override
    public UserAccountRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserAccountRecord value6(String value) {
        setMobile(value);
        return this;
    }

    @Override
    public UserAccountRecord value7(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserAccountRecord value8(String value) {
        setExternalId(value);
        return this;
    }

    @Override
    public UserAccountRecord value9(String value) {
        setCreatIp(value);
        return this;
    }

    @Override
    public UserAccountRecord value10(String value) {
        setLastLoginIp(value);
        return this;
    }

    @Override
    public UserAccountRecord value11(Integer value) {
        setLoginTimes(value);
        return this;
    }

    @Override
    public UserAccountRecord value12(Short value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserAccountRecord value13(String value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public UserAccountRecord value14(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public UserAccountRecord value15(String value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public UserAccountRecord value16(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public UserAccountRecord value17(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public UserAccountRecord values(Long value1, String value2, Short value3, Short value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11, Short value12, String value13, LocalDateTime value14, String value15, LocalDateTime value16, Integer value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserAccount from) {
        setId(from.getId());
        setCode(from.getCode());
        setSource(from.getSource());
        setMeans(from.getMeans());
        setEmail(from.getEmail());
        setMobile(from.getMobile());
        setPassword(from.getPassword());
        setExternalId(from.getExternalId());
        setCreatIp(from.getCreatIp());
        setLastLoginIp(from.getLastLoginIp());
        setLoginTimes(from.getLoginTimes());
        setStatus(from.getStatus());
        setCreateBy(from.getCreateBy());
        setCreateAt(from.getCreateAt());
        setUpdateBy(from.getUpdateBy());
        setUpdateAt(from.getUpdateAt());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IUserAccount> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(Long id, String code, Short source, Short means, String email, String mobile, String password, String externalId, String creatIp, String lastLoginIp, Integer loginTimes, Short status, String createBy, LocalDateTime createAt, String updateBy, LocalDateTime updateAt, Integer version) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setCode(code);
        setSource(source);
        setMeans(means);
        setEmail(email);
        setMobile(mobile);
        setPassword(password);
        setExternalId(externalId);
        setCreatIp(creatIp);
        setLastLoginIp(lastLoginIp);
        setLoginTimes(loginTimes);
        setStatus(status);
        setCreateBy(createBy);
        setCreateAt(createAt);
        setUpdateBy(updateBy);
        setUpdateAt(updateAt);
        setVersion(version);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(UserAccountPojo value) {
        super(UserAccount.USER_ACCOUNT);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setSource(value.getSource());
            setMeans(value.getMeans());
            setEmail(value.getEmail());
            setMobile(value.getMobile());
            setPassword(value.getPassword());
            setExternalId(value.getExternalId());
            setCreatIp(value.getCreatIp());
            setLastLoginIp(value.getLastLoginIp());
            setLoginTimes(value.getLoginTimes());
            setStatus(value.getStatus());
            setCreateBy(value.getCreateBy());
            setCreateAt(value.getCreateAt());
            setUpdateBy(value.getUpdateBy());
            setUpdateAt(value.getUpdateAt());
            setVersion(value.getVersion());
        }
    }
}
