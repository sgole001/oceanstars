/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.user.repository.generate.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import oceanstars.ecommerce.user.repository.generate.tables.UserPermissionOperation;
import oceanstars.ecommerce.user.repository.generate.tables.pojos.UserPermissionOperationPojo;
import oceanstars.ecommerce.user.repository.generate.tables.records.UserPermissionOperationRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserPermissionOperationDao extends DAOImpl<UserPermissionOperationRecord, UserPermissionOperationPojo, Long> {

    /**
     * Create a new UserPermissionOperationDao without any configuration
     */
    public UserPermissionOperationDao() {
        super(UserPermissionOperation.USER_PERMISSION_OPERATION, UserPermissionOperationPojo.class);
    }

    /**
     * Create a new UserPermissionOperationDao with an attached configuration
     */
    @Autowired
    public UserPermissionOperationDao(Configuration configuration) {
        super(UserPermissionOperation.USER_PERMISSION_OPERATION, UserPermissionOperationPojo.class, configuration);
    }

    @Override
    public Long getId(UserPermissionOperationPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchById(Long... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public UserPermissionOperationPojo fetchOneById(Long value) {
        return fetchOne(UserPermissionOperation.USER_PERMISSION_OPERATION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<UserPermissionOperationPojo> fetchOptionalById(Long value) {
        return fetchOptional(UserPermissionOperation.USER_PERMISSION_OPERATION.ID, value);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByCode(String... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public UserPermissionOperationPojo fetchOneByCode(String value) {
        return fetchOne(UserPermissionOperation.USER_PERMISSION_OPERATION.CODE, value);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public Optional<UserPermissionOperationPojo> fetchOptionalByCode(String value) {
        return fetchOptional(UserPermissionOperation.USER_PERMISSION_OPERATION.CODE, value);
    }

    /**
     * Fetch records that have <code>behavior BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfBehavior(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.BEHAVIOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>behavior IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByBehavior(String... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.BEHAVIOR, values);
    }

    /**
     * Fetch a unique record that has <code>behavior = value</code>
     */
    public UserPermissionOperationPojo fetchOneByBehavior(String value) {
        return fetchOne(UserPermissionOperation.USER_PERMISSION_OPERATION.BEHAVIOR, value);
    }

    /**
     * Fetch a unique record that has <code>behavior = value</code>
     */
    public Optional<UserPermissionOperationPojo> fetchOptionalByBehavior(String value) {
        return fetchOptional(UserPermissionOperation.USER_PERMISSION_OPERATION.BEHAVIOR, value);
    }

    /**
     * Fetch records that have <code>desc BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>desc IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByDesc(String... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.DESC, values);
    }

    /**
     * Fetch records that have <code>enabled BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enabled IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByEnabled(Boolean... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.ENABLED, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByCreateBy(String... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfUpdateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByUpdateBy(String... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfUpdateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.UPDATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_at IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByUpdateAt(LocalDateTime... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.UPDATE_AT, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<UserPermissionOperationPojo> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserPermissionOperation.USER_PERMISSION_OPERATION.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<UserPermissionOperationPojo> fetchByVersion(Integer... values) {
        return fetch(UserPermissionOperation.USER_PERMISSION_OPERATION.VERSION, values);
    }
}
