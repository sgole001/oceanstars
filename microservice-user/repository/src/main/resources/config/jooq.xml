<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.19.0.xsd">
  <generator>
    <!-- The default code generator. You can override this one, to generate your own code style.
         Supported generators:
         - org.jooq.codegen.JavaGenerator
         - org.jooq.codegen.ScalaGenerator
         Defaults to org.jooq.codegen.JavaGenerator -->
    <name>org.jooq.codegen.JavaGenerator</name>
    <strategy>
      <name>oceanstars.ecommerce.infrastructure.jooq.strategy.OceanStarsGeneratorStrategy</name>
    </strategy>

    <database>
      <name>org.jooq.meta.extensions.ddl.DDLDatabase</name>

      <properties>

        <!-- Specify the location of your SQL script.
             You may use ant-style file matching, e.g. /path/**/to/*.sql

             Where:
             - ** matches any directory subtree
             - * matches any number of characters in a directory / file name
             - ? matches a single character in a directory / file name -->
        <property>
          <key>scripts</key>
          <value>src/main/resources/ddl/database.sql</value>
        </property>

        <!-- The sort order of the scripts within a directory, where:

             - semantic: sorts versions, e.g. v-3.10.0 is after v-3.9.0 (default)
             - alphanumeric: sorts strings, e.g. v-3.10.0 is before v-3.9.0
             - flyway: sorts files the same way as flyway does
             - none: doesn't sort directory contents after fetching them from the directory -->
        <property>
          <key>sort</key>
          <value>semantic</value>
        </property>

        <!-- The default schema for unqualified objects:

             - public: all unqualified objects are located in the PUBLIC (upper case) schema
             - none: all unqualified objects are located in the default schema (default)

             This configuration can be overridden with the schema mapping feature -->
        <property>
          <key>unqualifiedSchema</key>
          <value>none</value>
        </property>

        <!-- The default name case for unquoted objects:

             - as_is: unquoted object names are kept unquoted
             - upper: unquoted object names are turned into upper case (most databases)
             - lower: unquoted object names are turned into lower case (e.g. PostgreSQL) -->
        <property>
          <key>defaultNameCase</key>
          <value>as_is</value>
        </property>

      </properties>

      <forcedTypes>
        <forcedType>
          <name>BOOLEAN</name>
          <types>tinyint.*</types>
          <excludeExpression>.*\.user_permission_behavior\.opt</excludeExpression>
        </forcedType>
      </forcedTypes>

      <recordVersionFields>version</recordVersionFields>

      <embeddablePrimaryKeys>.*</embeddablePrimaryKeys>

      <!-- 声明需要排除不生成java代码的table-->
      <excludes>
      </excludes>
    </database>
    <generate>
      <!--生成dao和pojo-->
      <daos>true</daos>
      <pojos>true</pojos>

      <!--把数据库时间类型映射到java 时间类型-->
      <javaTimeTypes>true</javaTimeTypes>
      <interfaces>true</interfaces>
      <!--生成的代码中添加spring注释，比如@Repository-->
      <springAnnotations>true</springAnnotations>
      <pojosToString>true</pojosToString>
    </generate>
    <target>
      <!-- The destination package of your generated classes (within the destination directory) -->
      <packageName>oceanstars.ecommerce.user.repository.generate</packageName>
      <!-- The destination directory of your generated classes. Using Maven directory layout here -->
      <directory>src/main/java</directory>
    </target>
  </generator>
</configuration>