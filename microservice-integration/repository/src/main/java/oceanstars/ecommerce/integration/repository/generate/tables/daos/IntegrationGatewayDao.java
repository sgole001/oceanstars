/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.integration.repository.generate.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import oceanstars.ecommerce.integration.repository.generate.tables.IntegrationGateway;
import oceanstars.ecommerce.integration.repository.generate.tables.pojos.IntegrationGatewayPojo;
import oceanstars.ecommerce.integration.repository.generate.tables.records.IntegrationGatewayRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class IntegrationGatewayDao extends DAOImpl<IntegrationGatewayRecord, IntegrationGatewayPojo, Long> {

    /**
     * Create a new IntegrationGatewayDao without any configuration
     */
    public IntegrationGatewayDao() {
        super(IntegrationGateway.INTEGRATION_GATEWAY, IntegrationGatewayPojo.class);
    }

    /**
     * Create a new IntegrationGatewayDao with an attached configuration
     */
    @Autowired
    public IntegrationGatewayDao(Configuration configuration) {
        super(IntegrationGateway.INTEGRATION_GATEWAY, IntegrationGatewayPojo.class, configuration);
    }

    @Override
    public Long getId(IntegrationGatewayPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchById(Long... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public IntegrationGatewayPojo fetchOneById(Long value) {
        return fetchOne(IntegrationGateway.INTEGRATION_GATEWAY.ID, value);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByCode(String... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public IntegrationGatewayPojo fetchOneByCode(String value) {
        return fetchOne(IntegrationGateway.INTEGRATION_GATEWAY.CODE, value);
    }

    /**
     * Fetch records that have <code>system BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfSystem(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.SYSTEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>system IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchBySystem(Short... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.SYSTEM, values);
    }

    /**
     * Fetch a unique record that has <code>system = value</code>
     */
    public IntegrationGatewayPojo fetchOneBySystem(Short value) {
        return fetchOne(IntegrationGateway.INTEGRATION_GATEWAY.SYSTEM, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByDescription(String... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByCreateBy(String... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfCreateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.CREATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_at IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByCreateAt(LocalDateTime... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.CREATE_AT, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfUpdateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByUpdateBy(String... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfUpdateAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.UPDATE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_at IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByUpdateAt(LocalDateTime... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.UPDATE_AT, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<IntegrationGatewayPojo> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IntegrationGateway.INTEGRATION_GATEWAY.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<IntegrationGatewayPojo> fetchByVersion(Integer... values) {
        return fetch(IntegrationGateway.INTEGRATION_GATEWAY.VERSION, values);
    }
}
