/*
 * This file is generated by jOOQ.
 */
package oceanstars.ecommerce.integration.repository.generate.tables.records;


import java.time.LocalDateTime;

import oceanstars.ecommerce.integration.repository.generate.tables.IntegrationAuthentication;
import oceanstars.ecommerce.integration.repository.generate.tables.interfaces.IIntegrationAuthentication;
import oceanstars.ecommerce.integration.repository.generate.tables.pojos.IntegrationAuthenticationPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IntegrationAuthenticationRecord extends UpdatableRecordImpl<IntegrationAuthenticationRecord> implements Record6<Long, String, String, byte[], String, LocalDateTime>, IIntegrationAuthentication {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>integration_authentication.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>integration_authentication.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>integration_authentication.appKey</code>.
     */
    @Override
    public void setAppkey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>integration_authentication.appKey</code>.
     */
    @Override
    public String getAppkey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>integration_authentication.appSecret</code>.
     */
    @Override
    public void setAppsecret(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>integration_authentication.appSecret</code>.
     */
    @Override
    public String getAppsecret() {
        return (String) get(2);
    }

    /**
     * Setter for <code>integration_authentication.x509Certificate</code>.
     */
    @Override
    public void setX509certificate(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>integration_authentication.x509Certificate</code>.
     */
    @Override
    public byte[] getX509certificate() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>integration_authentication.create_by</code>.
     */
    @Override
    public void setCreateBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>integration_authentication.create_by</code>.
     */
    @Override
    public String getCreateBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>integration_authentication.create_at</code>.
     */
    @Override
    public void setCreateAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>integration_authentication.create_at</code>.
     */
    @Override
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, byte[], String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, byte[], String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.ID;
    }

    @Override
    public Field<String> field2() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.APPKEY;
    }

    @Override
    public Field<String> field3() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.APPSECRET;
    }

    @Override
    public Field<byte[]> field4() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.X509CERTIFICATE;
    }

    @Override
    public Field<String> field5() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return IntegrationAuthentication.INTEGRATION_AUTHENTICATION.CREATE_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAppkey();
    }

    @Override
    public String component3() {
        return getAppsecret();
    }

    @Override
    public byte[] component4() {
        return getX509certificate();
    }

    @Override
    public String component5() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAppkey();
    }

    @Override
    public String value3() {
        return getAppsecret();
    }

    @Override
    public byte[] value4() {
        return getX509certificate();
    }

    @Override
    public String value5() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateAt();
    }

    @Override
    public IntegrationAuthenticationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord value2(String value) {
        setAppkey(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord value3(String value) {
        setAppsecret(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord value4(byte[] value) {
        setX509certificate(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord value5(String value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord value6(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public IntegrationAuthenticationRecord values(Long value1, String value2, String value3, byte[] value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IIntegrationAuthentication from) {
        setId(from.getId());
        setAppkey(from.getAppkey());
        setAppsecret(from.getAppsecret());
        setX509certificate(from.getX509certificate());
        setCreateBy(from.getCreateBy());
        setCreateAt(from.getCreateAt());
    }

    @Override
    public <E extends IIntegrationAuthentication> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IntegrationAuthenticationRecord
     */
    public IntegrationAuthenticationRecord() {
        super(IntegrationAuthentication.INTEGRATION_AUTHENTICATION);
    }

    /**
     * Create a detached, initialised IntegrationAuthenticationRecord
     */
    public IntegrationAuthenticationRecord(Long id, String appkey, String appsecret, byte[] x509certificate, String createBy, LocalDateTime createAt) {
        super(IntegrationAuthentication.INTEGRATION_AUTHENTICATION);

        setId(id);
        setAppkey(appkey);
        setAppsecret(appsecret);
        setX509certificate(x509certificate);
        setCreateBy(createBy);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised IntegrationAuthenticationRecord
     */
    public IntegrationAuthenticationRecord(IntegrationAuthenticationPojo value) {
        super(IntegrationAuthentication.INTEGRATION_AUTHENTICATION);

        if (value != null) {
            setId(value.getId());
            setAppkey(value.getAppkey());
            setAppsecret(value.getAppsecret());
            setX509certificate(value.getX509certificate());
            setCreateBy(value.getCreateBy());
            setCreateAt(value.getCreateAt());
        }
    }
}
