<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>oceanstars-ecommerce</groupId>
  <artifactId>parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>parent</name>
  <description>parent project for oceanstars bz platform</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <!--spring依赖版本控制（和spring-boot-parent版本保持一致）-->
    <springframework.version>6.1.1</springframework.version>
    <!--spring-boot-parent版本号，通过spring-boot管理其他第三方依赖版本-->
    <spring.boot.version>3.2.0</spring.boot.version>
    <!--spring security依赖版本控制（和spring framework版本保持一致）-->
    <springframework.security.version>6.2.0</springframework.security.version>

    <commons.lang3.version>3.13.0</commons.lang3.version>
    <commons.io.version>2.14.0</commons.io.version>
    <jjwt.version>0.12.3</jjwt.version>
    <redis.version>5.0.2</redis.version>
    <shiro.version>2.0.0-alpha-3</shiro.version>
    <jaxb.version>4.0.4</jaxb.version>
    <druid.spring.boot.version>1.2.20</druid.spring.boot.version>
    <hikariCP.version>5.1.0</hikariCP.version>
    <mysql.j.version>8.1.0</mysql.j.version>
    <google.gson.version>2.10.1</google.gson.version>
    <alibaba.fastjson2.version>2.0.41</alibaba.fastjson2.version>
    <io.micrometer>1.11.5</io.micrometer>
    <spring-kafka.version>3.1.0</spring-kafka.version>
    <elasticsearch.version>8.11.1</elasticsearch.version>
    <google.guava.version>32.1.3-jre</google.guava.version>
    <jooq.version>3.19.1</jooq.version>
    <jetcache.version>2.7.4</jetcache.version>
    <xxl.version>2.4.0</xxl.version>
    <swagger.version>3.0.0</swagger.version>
    <swagger.ui.version>2.2.0</swagger.ui.version>
    <protobuf.bom.version>3.25.1</protobuf.bom.version>
    <grpc.bom.version>1.59.0</grpc.bom.version>
    <protostuff.version>1.8.0</protostuff.version>
    <protoc.gen.grpc.java.version>1.59.0</protoc.gen.grpc.java.version>
    <javax.servlet.version>4.0.1</javax.servlet.version>
    <jakarta.servlet-api.version>6.0.0</jakarta.servlet-api.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>

    <!-- Plugin -->
    <plugin.os.maven.version>1.7.1</plugin.os.maven.version>
    <plugin.protobuf.maven.version>0.6.1</plugin.protobuf.maven.version>

    <!-- Biz Parent Project -->
    <oceanstars.ecommerce.common.version>0.0.1-SNAPSHOT</oceanstars.ecommerce.common.version>
    <oceanstars.ecommerce.infrastructure.version>0.0.1-SNAPSHOT</oceanstars.ecommerce.infrastructure.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- 统一管理Spring依赖 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${springframework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- grpc -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-bom</artifactId>
        <version>${protobuf.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Spring 安全工具组件 -->
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${springframework.security.version}</version>
      </dependency>

      <!-- Apache工具组件 -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>

      <!-- JWT工具组件 -->
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- XML工具组件(Java Architecture for XML Binding) -->
      <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-runtime</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxb.version}</version>
      </dependency>
      <!--      <dependency>-->
      <!--        <groupId>javax.xml.bind</groupId>-->
      <!--        <artifactId>jaxb-api</artifactId>-->
      <!--        <version>${jaxb.version}</version>&lt;!&ndash; JDK11已经删除javax.xml.bind相关&ndash;&gt;-->
      <!--      </dependency>-->

      <!-- Redis工具组件 -->
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${redis.version}</version>
      </dependency>

      <!-- Shiro工具组件 -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-jakarta-ee</artifactId>
        <classifier>jakarta</classifier>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-cdi</artifactId>
        <classifier>jakarta</classifier>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <classifier>jakarta</classifier>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-web</artifactId>
        <classifier>jakarta</classifier>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-spring</artifactId>
        <classifier>jakarta</classifier>
        <version>${shiro.version}</version>
      </dependency>
      <!--      <dependency>-->
      <!--        <groupId>jakarta.servlet</groupId>-->
      <!--        <artifactId>jakarta.servlet-api</artifactId>-->
      <!--        <version>${jakarta.servlet-api.version}</version>-->
      <!--        <scope>provided</scope>-->
      <!--      </dependency>-->
      <!--      <dependency>-->
      <!--        <groupId>javax.servlet</groupId>-->
      <!--        <artifactId>javax.servlet-api</artifactId>-->
      <!--        <version>${javax.servlet.version}</version>-->
      <!--      </dependency>-->

      <!-- 线程池工具组件druid -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid.spring.boot.version}</version>
      </dependency>

      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikariCP.version}</version>
      </dependency>

      <!-- MySql连接工具 -->
      <dependency>
        <groupId>com.mysql</groupId>
        <artifactId>mysql-connector-j</artifactId>
        <version>${mysql.j.version}</version>
      </dependency>
      <!--      <dependency>-->
      <!--        <groupId>mysql</groupId>-->
      <!--        <artifactId>mysql-connector-java</artifactId>-->
      <!--        <version>${mysql.version}</version>-->
      <!--      </dependency>-->

      <!-- Kafka工具组件 -->
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka</artifactId>
        <version>${spring-kafka.version}</version>
      </dependency>

      <!-- ElasticSearch工具组件 -->
      <dependency>
        <groupId>co.elastic.clients</groupId>
        <artifactId>elasticsearch-java</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>

      <!-- JSON 工具组件 -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${google.gson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.fastjson2</groupId>
        <artifactId>fastjson2</artifactId>
        <version>${alibaba.fastjson2.version}</version>
      </dependency>

      <!-- prometheus 工具组件 -->
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${io.micrometer}</version>
      </dependency>

      <!-- google java 工具组件 -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${google.guava.version}</version>
      </dependency>

      <!-- jooq 代码生成工具组件 -->
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq</artifactId>
        <version>${jooq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-meta</artifactId>
        <version>${jooq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-meta-extensions</artifactId>
        <version>${jooq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen</artifactId>
        <version>${jooq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>
      </dependency>

      <!-- JetCache 缓存工具组件 -->
      <dependency>
        <groupId>com.alicp.jetcache</groupId>
        <artifactId>jetcache-starter-redis</artifactId>
        <version>${jetcache.version}</version>
      </dependency>

      <!-- xxl-job 分布式任务调度组件 -->
      <dependency>
        <groupId>com.xuxueli</groupId>
        <artifactId>xxl-job-core</artifactId>
        <version>${xxl.version}</version>
      </dependency>

      <!-- Swagger -->
      <!--      <dependency>-->
      <!--        <groupId>io.springfox</groupId>-->
      <!--        <artifactId>springfox-boot-starter</artifactId>-->
      <!--        <version>${swagger.version}</version>-->
      <!--      </dependency>-->

      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${swagger.ui.version}</version>
      </dependency>

      <!-- 序列化工具组件 -->
      <dependency>
        <groupId>io.protostuff</groupId>
        <artifactId>protostuff-core</artifactId>
        <version>${protostuff.version}</version>
      </dependency>

      <dependency>
        <groupId>io.protostuff</groupId>
        <artifactId>protostuff-runtime</artifactId>
        <version>${protostuff.version}</version>
      </dependency>

      <!-- 向下兼容部分JDK11前的Annotation（grpc自动生成代码中的@javax.annotation.Generated） -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation-api.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Spring单元测试工具组件 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <profileActive>dev</profileActive>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>sit</id>
      <properties>
        <profileActive>sit</profileActive>
      </properties>
    </profile>
    <profile>
      <id>uat</id>
      <properties>
        <profileActive>uat</profileActive>
      </properties>
    </profile>
    <profile>
      <id>prd</id>
      <properties>
        <profileActive>prd</profileActive>
      </properties>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>${env.repository.id}</id>
      <url>${env.repository.url}</url>
    </repository>
    <snapshotRepository>
      <id>${env.repository.id}</id>
      <url>${env.repository.url}</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${plugin.os.maven.version}</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
        </plugin>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>${plugin.protobuf.maven.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>compile-custom</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <protocArtifact>com.google.protobuf:protoc:${protobuf.bom.version}:exe:${os.detected.classifier}</protocArtifact>
            <pluginId>grpc-java</pluginId>
            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${protoc.gen.grpc.java.version}:exe:${os.detected.classifier}</pluginArtifact>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jooq</groupId>
          <artifactId>jooq-codegen-maven</artifactId>
          <version>${jooq.version}</version>
          <executions>
            <execution>
              <id>jooq-codegen</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>generate</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>com.mysql</groupId>
              <artifactId>mysql-connector-j</artifactId>
              <version>${mysql.j.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <!--jooq 配置文件加载-->
            <configurationFile>src/main/resources/config/jooq.xml</configurationFile>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
